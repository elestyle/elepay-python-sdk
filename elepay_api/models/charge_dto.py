# coding: utf-8

"""
    elepay API リファレンス

    elepay APIはRESTをベースに構成された決済APIです。支払い処理、返金処理など、決済に関わる運用における様々なことができます。   # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class ChargeDto(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'object': 'str',
        'live_mode': 'bool',
        'amount': 'int',
        'currency': 'str',
        'payment_method': 'PaymentMethodType',
        'order_no': 'str',
        'description': 'str',
        'extra': 'dict(str, object)',
        'metadata': 'dict(str, object)',
        'client_ip': 'str',
        'paid': 'bool',
        'refunded': 'bool',
        'refunds': 'RefundExtDto',
        'status': 'str',
        'credential': 'str',
        'paid_time': 'int',
        'refund_time': 'int',
        'expiry_time': 'int',
        'settle_time': 'int',
        'create_time': 'int'
    }

    attribute_map = {
        'id': 'id',
        'object': 'object',
        'live_mode': 'liveMode',
        'amount': 'amount',
        'currency': 'currency',
        'payment_method': 'paymentMethod',
        'order_no': 'orderNo',
        'description': 'description',
        'extra': 'extra',
        'metadata': 'metadata',
        'client_ip': 'clientIp',
        'paid': 'paid',
        'refunded': 'refunded',
        'refunds': 'refunds',
        'status': 'status',
        'credential': 'credential',
        'paid_time': 'paidTime',
        'refund_time': 'refundTime',
        'expiry_time': 'expiryTime',
        'settle_time': 'settleTime',
        'create_time': 'createTime'
    }

    def __init__(self, id=None, object='charge', live_mode=None, amount=None, currency='JPY', payment_method=None, order_no=None, description=None, extra=None, metadata=None, client_ip=None, paid=None, refunded=None, refunds=None, status=None, credential=None, paid_time=None, refund_time=None, expiry_time=None, settle_time=None, create_time=None):  # noqa: E501
        """ChargeDto - a model defined in OpenAPI"""  # noqa: E501

        self._id = None
        self._object = None
        self._live_mode = None
        self._amount = None
        self._currency = None
        self._payment_method = None
        self._order_no = None
        self._description = None
        self._extra = None
        self._metadata = None
        self._client_ip = None
        self._paid = None
        self._refunded = None
        self._refunds = None
        self._status = None
        self._credential = None
        self._paid_time = None
        self._refund_time = None
        self._expiry_time = None
        self._settle_time = None
        self._create_time = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if object is not None:
            self.object = object
        if live_mode is not None:
            self.live_mode = live_mode
        if amount is not None:
            self.amount = amount
        if currency is not None:
            self.currency = currency
        if payment_method is not None:
            self.payment_method = payment_method
        if order_no is not None:
            self.order_no = order_no
        if description is not None:
            self.description = description
        if extra is not None:
            self.extra = extra
        if metadata is not None:
            self.metadata = metadata
        if client_ip is not None:
            self.client_ip = client_ip
        if paid is not None:
            self.paid = paid
        if refunded is not None:
            self.refunded = refunded
        if refunds is not None:
            self.refunds = refunds
        if status is not None:
            self.status = status
        if credential is not None:
            self.credential = credential
        if paid_time is not None:
            self.paid_time = paid_time
        if refund_time is not None:
            self.refund_time = refund_time
        if expiry_time is not None:
            self.expiry_time = expiry_time
        if settle_time is not None:
            self.settle_time = settle_time
        if create_time is not None:
            self.create_time = create_time

    @property
    def id(self):
        """Gets the id of this ChargeDto.  # noqa: E501

        Charge ID  # noqa: E501

        :return: The id of this ChargeDto.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChargeDto.

        Charge ID  # noqa: E501

        :param id: The id of this ChargeDto.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def object(self):
        """Gets the object of this ChargeDto.  # noqa: E501

        対象種類の表記  # noqa: E501

        :return: The object of this ChargeDto.  # noqa: E501
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this ChargeDto.

        対象種類の表記  # noqa: E501

        :param object: The object of this ChargeDto.  # noqa: E501
        :type: str
        """

        self._object = object

    @property
    def live_mode(self):
        """Gets the live_mode of this ChargeDto.  # noqa: E501

        本番モードかどうか - false テストモード - true 本番モード   # noqa: E501

        :return: The live_mode of this ChargeDto.  # noqa: E501
        :rtype: bool
        """
        return self._live_mode

    @live_mode.setter
    def live_mode(self, live_mode):
        """Sets the live_mode of this ChargeDto.

        本番モードかどうか - false テストモード - true 本番モード   # noqa: E501

        :param live_mode: The live_mode of this ChargeDto.  # noqa: E501
        :type: bool
        """

        self._live_mode = live_mode

    @property
    def amount(self):
        """Gets the amount of this ChargeDto.  # noqa: E501

        支払い金額  # noqa: E501

        :return: The amount of this ChargeDto.  # noqa: E501
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this ChargeDto.

        支払い金額  # noqa: E501

        :param amount: The amount of this ChargeDto.  # noqa: E501
        :type: int
        """

        self._amount = amount

    @property
    def currency(self):
        """Gets the currency of this ChargeDto.  # noqa: E501

        通貨コード (ISO_4217)  # noqa: E501

        :return: The currency of this ChargeDto.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this ChargeDto.

        通貨コード (ISO_4217)  # noqa: E501

        :param currency: The currency of this ChargeDto.  # noqa: E501
        :type: str
        """

        self._currency = currency

    @property
    def payment_method(self):
        """Gets the payment_method of this ChargeDto.  # noqa: E501


        :return: The payment_method of this ChargeDto.  # noqa: E501
        :rtype: PaymentMethodType
        """
        return self._payment_method

    @payment_method.setter
    def payment_method(self, payment_method):
        """Sets the payment_method of this ChargeDto.


        :param payment_method: The payment_method of this ChargeDto.  # noqa: E501
        :type: PaymentMethodType
        """

        self._payment_method = payment_method

    @property
    def order_no(self):
        """Gets the order_no of this ChargeDto.  # noqa: E501

        お客様システム側のオーダーNo、例えば注文番号、決済IDなど  # noqa: E501

        :return: The order_no of this ChargeDto.  # noqa: E501
        :rtype: str
        """
        return self._order_no

    @order_no.setter
    def order_no(self, order_no):
        """Sets the order_no of this ChargeDto.

        お客様システム側のオーダーNo、例えば注文番号、決済IDなど  # noqa: E501

        :param order_no: The order_no of this ChargeDto.  # noqa: E501
        :type: str
        """

        self._order_no = order_no

    @property
    def description(self):
        """Gets the description of this ChargeDto.  # noqa: E501

        支払い説明文  # noqa: E501

        :return: The description of this ChargeDto.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ChargeDto.

        支払い説明文  # noqa: E501

        :param description: The description of this ChargeDto.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def extra(self):
        """Gets the extra of this ChargeDto.  # noqa: E501

        支払いエキストラデータ  # noqa: E501

        :return: The extra of this ChargeDto.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._extra

    @extra.setter
    def extra(self, extra):
        """Sets the extra of this ChargeDto.

        支払いエキストラデータ  # noqa: E501

        :param extra: The extra of this ChargeDto.  # noqa: E501
        :type: dict(str, object)
        """

        self._extra = extra

    @property
    def metadata(self):
        """Gets the metadata of this ChargeDto.  # noqa: E501

        支払いメタデータ  # noqa: E501

        :return: The metadata of this ChargeDto.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ChargeDto.

        支払いメタデータ  # noqa: E501

        :param metadata: The metadata of this ChargeDto.  # noqa: E501
        :type: dict(str, object)
        """

        self._metadata = metadata

    @property
    def client_ip(self):
        """Gets the client_ip of this ChargeDto.  # noqa: E501

        Client IP アドレス  # noqa: E501

        :return: The client_ip of this ChargeDto.  # noqa: E501
        :rtype: str
        """
        return self._client_ip

    @client_ip.setter
    def client_ip(self, client_ip):
        """Sets the client_ip of this ChargeDto.

        Client IP アドレス  # noqa: E501

        :param client_ip: The client_ip of this ChargeDto.  # noqa: E501
        :type: str
        """

        self._client_ip = client_ip

    @property
    def paid(self):
        """Gets the paid of this ChargeDto.  # noqa: E501

        支払い済みフラグ  # noqa: E501

        :return: The paid of this ChargeDto.  # noqa: E501
        :rtype: bool
        """
        return self._paid

    @paid.setter
    def paid(self, paid):
        """Sets the paid of this ChargeDto.

        支払い済みフラグ  # noqa: E501

        :param paid: The paid of this ChargeDto.  # noqa: E501
        :type: bool
        """

        self._paid = paid

    @property
    def refunded(self):
        """Gets the refunded of this ChargeDto.  # noqa: E501

        返金済みフラグ  # noqa: E501

        :return: The refunded of this ChargeDto.  # noqa: E501
        :rtype: bool
        """
        return self._refunded

    @refunded.setter
    def refunded(self, refunded):
        """Sets the refunded of this ChargeDto.

        返金済みフラグ  # noqa: E501

        :param refunded: The refunded of this ChargeDto.  # noqa: E501
        :type: bool
        """

        self._refunded = refunded

    @property
    def refunds(self):
        """Gets the refunds of this ChargeDto.  # noqa: E501


        :return: The refunds of this ChargeDto.  # noqa: E501
        :rtype: RefundExtDto
        """
        return self._refunds

    @refunds.setter
    def refunds(self, refunds):
        """Sets the refunds of this ChargeDto.


        :param refunds: The refunds of this ChargeDto.  # noqa: E501
        :type: RefundExtDto
        """

        self._refunds = refunds

    @property
    def status(self):
        """Gets the status of this ChargeDto.  # noqa: E501

        支払い状態  # noqa: E501

        :return: The status of this ChargeDto.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ChargeDto.

        支払い状態  # noqa: E501

        :param status: The status of this ChargeDto.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def credential(self):
        """Gets the credential of this ChargeDto.  # noqa: E501

        Client SDK の認証情報  # noqa: E501

        :return: The credential of this ChargeDto.  # noqa: E501
        :rtype: str
        """
        return self._credential

    @credential.setter
    def credential(self, credential):
        """Sets the credential of this ChargeDto.

        Client SDK の認証情報  # noqa: E501

        :param credential: The credential of this ChargeDto.  # noqa: E501
        :type: str
        """

        self._credential = credential

    @property
    def paid_time(self):
        """Gets the paid_time of this ChargeDto.  # noqa: E501

        支払い時間のUTCタイムスタンプ  # noqa: E501

        :return: The paid_time of this ChargeDto.  # noqa: E501
        :rtype: int
        """
        return self._paid_time

    @paid_time.setter
    def paid_time(self, paid_time):
        """Sets the paid_time of this ChargeDto.

        支払い時間のUTCタイムスタンプ  # noqa: E501

        :param paid_time: The paid_time of this ChargeDto.  # noqa: E501
        :type: int
        """

        self._paid_time = paid_time

    @property
    def refund_time(self):
        """Gets the refund_time of this ChargeDto.  # noqa: E501

        返金時間のUTCタイムスタンプ  # noqa: E501

        :return: The refund_time of this ChargeDto.  # noqa: E501
        :rtype: int
        """
        return self._refund_time

    @refund_time.setter
    def refund_time(self, refund_time):
        """Sets the refund_time of this ChargeDto.

        返金時間のUTCタイムスタンプ  # noqa: E501

        :param refund_time: The refund_time of this ChargeDto.  # noqa: E501
        :type: int
        """

        self._refund_time = refund_time

    @property
    def expiry_time(self):
        """Gets the expiry_time of this ChargeDto.  # noqa: E501

        支払い請求有効時間のUTCタイムスタンプ  # noqa: E501

        :return: The expiry_time of this ChargeDto.  # noqa: E501
        :rtype: int
        """
        return self._expiry_time

    @expiry_time.setter
    def expiry_time(self, expiry_time):
        """Sets the expiry_time of this ChargeDto.

        支払い請求有効時間のUTCタイムスタンプ  # noqa: E501

        :param expiry_time: The expiry_time of this ChargeDto.  # noqa: E501
        :type: int
        """

        self._expiry_time = expiry_time

    @property
    def settle_time(self):
        """Gets the settle_time of this ChargeDto.  # noqa: E501

        支払い締め時間のUTCタイムスタンプ  # noqa: E501

        :return: The settle_time of this ChargeDto.  # noqa: E501
        :rtype: int
        """
        return self._settle_time

    @settle_time.setter
    def settle_time(self, settle_time):
        """Sets the settle_time of this ChargeDto.

        支払い締め時間のUTCタイムスタンプ  # noqa: E501

        :param settle_time: The settle_time of this ChargeDto.  # noqa: E501
        :type: int
        """

        self._settle_time = settle_time

    @property
    def create_time(self):
        """Gets the create_time of this ChargeDto.  # noqa: E501

        支払い新規時間のUTCタイムスタンプ  # noqa: E501

        :return: The create_time of this ChargeDto.  # noqa: E501
        :rtype: int
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this ChargeDto.

        支払い新規時間のUTCタイムスタンプ  # noqa: E501

        :param create_time: The create_time of this ChargeDto.  # noqa: E501
        :type: int
        """

        self._create_time = create_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ChargeDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
